

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu May 07 10:19:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 09/04/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           ; #config settings
    50                           
    51                           	psect	cinit
    52  007FAA                     __pcinit:
    53                           	callstack 0
    54  007FAA                     start_initialization:
    55                           	callstack 0
    56  007FAA                     __initialization:
    57                           	callstack 0
    58  007FAA                     end_of_initialization:
    59                           	callstack 0
    60  007FAA                     __end_of__initialization:
    61                           	callstack 0
    62  007FAA  0100               	movlb	0
    63  007FAC  EFE3  F03F         	goto	_main	;jump to C main() function
    64                           
    65                           	psect	cstackCOMRAM
    66  000001                     __pcstackCOMRAM:
    67                           	callstack 0
    68  000001                     ?_add:
    69                           	callstack 0
    70  000001                     add@a:
    71                           	callstack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74  000001                     	ds	2
    75  000003                     add@b:
    76                           	callstack 0
    77                           
    78                           ; 2 bytes @ 0x2
    79  000003                     	ds	2
    80  000005                     add@c:
    81                           	callstack 0
    82                           
    83                           ; 2 bytes @ 0x4
    84  000005                     	ds	2
    85  000007                     
    86                           ; 2 bytes @ 0x6
    87  000007                     	ds	2
    88  000009                     
    89                           ; 3 bytes @ 0x8
    90  000009                     	ds	3
    91  00000C                     
    92                           ; 1 bytes @ 0xB
    93  00000C                     	ds	2
    94  00000E                     main@e:
    95                           	callstack 0
    96                           
    97                           ; 2 bytes @ 0xD
    98  00000E                     	ds	2
    99  000010                     main@f:
   100                           	callstack 0
   101                           
   102                           ; 2 bytes @ 0xF
   103  000010                     	ds	2
   104                           
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 16 in file "newmain.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;  argc            2    6[COMRAM] int 
   113 ;;  argv            3    8[COMRAM] PTR PTR unsigned char 
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  f               2   15[COMRAM] int 
   116 ;;  e               2   13[COMRAM] int 
   117 ;;  d               2    0        int 
   118 ;; Return value:  Size  Location     Type
   119 ;;                  2    6[COMRAM] int 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   127 ;;      Params:         5       0       0       0       0       0       0       0       0
   128 ;;      Locals:         6       0       0       0       0       0       0       0       0
   129 ;;      Temps:          0       0       0       0       0       0       0       0       0
   130 ;;      Totals:        11       0       0       0       0       0       0       0       0
   131 ;;Total ram usage:       11 bytes
   132 ;; Hardware stack levels required when called:    1
   133 ;; This function calls:
   134 ;;		_add
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141  007FC6                     __ptext0:
   142                           	callstack 0
   143  007FC6                     _main:
   144                           	callstack 30
   145  007FC6                     
   146                           ;newmain.c: 18:     int e = 15;
   147  007FC6  0E00               	movlw	0
   148  007FC8  6E0F               	movwf	(main@e+1)^0,c
   149  007FCA  0E0F               	movlw	15
   150  007FCC  6E0E               	movwf	main@e^0,c
   151                           
   152                           ;newmain.c: 19:     int f = 0;
   153  007FCE  0E00               	movlw	0
   154  007FD0  6E11               	movwf	(main@f+1)^0,c
   155  007FD2  0E00               	movlw	0
   156  007FD4  6E10               	movwf	main@f^0,c
   157  007FD6                     
   158                           ;newmain.c: 20:     f = add(d,e);
   159  007FD6  0E00               	movlw	0
   160  007FD8  6E02               	movwf	(add@a+1)^0,c
   161  007FDA  0E0C               	movlw	12
   162  007FDC  6E01               	movwf	add@a^0,c
   163  007FDE  0E00               	movlw	0
   164  007FE0  6E04               	movwf	(add@b+1)^0,c
   165  007FE2  0E0F               	movlw	15
   166  007FE4  6E03               	movwf	add@b^0,c
   167  007FE6  ECD8  F03F         	call	_add	;wreg free
   168  007FEA  C001  F010         	movff	?_add,main@f
   169  007FEE  C002  F011         	movff	?_add+1,main@f+1
   170  007FF2                     
   171                           ;newmain.c: 21:     f = f * 2;
   172  007FF2  90D8               	bcf	status,0,c
   173  007FF4  3410               	rlcf	main@f^0,w,c
   174  007FF6  6E10               	movwf	main@f^0,c
   175  007FF8  3411               	rlcf	(main@f+1)^0,w,c
   176  007FFA  6E11               	movwf	(main@f+1)^0,c
   177  007FFC  EF00  F000         	goto	start
   178  008000                     __end_of_main:
   179                           	callstack 0
   180                           
   181 ;; *************** function _add *****************
   182 ;; Defined at:
   183 ;;		line 25 in file "newmain.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;  a               2    0[COMRAM] int 
   186 ;;  b               2    2[COMRAM] int 
   187 ;; Auto vars:     Size  Location     Type
   188 ;;  c               2    4[COMRAM] int 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  2    0[COMRAM] int 
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         4       0       0       0       0       0       0       0       0
   199 ;;      Locals:         2       0       0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0       0       0
   201 ;;      Totals:         6       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:        6 bytes
   203 ;; Hardware stack levels used:    1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		_main
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text1
   212  007FB0                     __ptext1:
   213                           	callstack 0
   214  007FB0                     _add:
   215                           	callstack 30
   216  007FB0                     
   217                           ;newmain.c: 27:     c = a + b;
   218  007FB0  5003               	movf	add@b^0,w,c
   219  007FB2  2401               	addwf	add@a^0,w,c
   220  007FB4  6E05               	movwf	add@c^0,c
   221  007FB6  5004               	movf	(add@b+1)^0,w,c
   222  007FB8  2002               	addwfc	(add@a+1)^0,w,c
   223  007FBA  6E06               	movwf	(add@c+1)^0,c
   224  007FBC                     
   225                           ;newmain.c: 28:     return c;
   226  007FBC  C005  F001         	movff	add@c,?_add
   227  007FC0  C006  F002         	movff	add@c+1,?_add+1
   228  007FC4  0012               	return		;funcret
   229  007FC6                     __end_of_add:
   230                           	callstack 0
   231  0000                     
   232                           	psect	rparam
   233  0000                     
   234                           	psect	idloc
   235                           
   236                           ;Config register IDLOC0 @ 0x200000
   237                           ;	unspecified, using default values
   238  200000                     	org	2097152
   239  200000  FF                 	db	255
   240                           
   241                           ;Config register IDLOC1 @ 0x200001
   242                           ;	unspecified, using default values
   243  200001                     	org	2097153
   244  200001  FF                 	db	255
   245                           
   246                           ;Config register IDLOC2 @ 0x200002
   247                           ;	unspecified, using default values
   248  200002                     	org	2097154
   249  200002  FF                 	db	255
   250                           
   251                           ;Config register IDLOC3 @ 0x200003
   252                           ;	unspecified, using default values
   253  200003                     	org	2097155
   254  200003  FF                 	db	255
   255                           
   256                           ;Config register IDLOC4 @ 0x200004
   257                           ;	unspecified, using default values
   258  200004                     	org	2097156
   259  200004  FF                 	db	255
   260                           
   261                           ;Config register IDLOC5 @ 0x200005
   262                           ;	unspecified, using default values
   263  200005                     	org	2097157
   264  200005  FF                 	db	255
   265                           
   266                           ;Config register IDLOC6 @ 0x200006
   267                           ;	unspecified, using default values
   268  200006                     	org	2097158
   269  200006  FF                 	db	255
   270                           
   271                           ;Config register IDLOC7 @ 0x200007
   272                           ;	unspecified, using default values
   273  200007                     	org	2097159
   274  200007  FF                 	db	255
   275                           
   276                           	psect	config
   277                           
   278                           ;Config register CONFIG1L @ 0x300000
   279                           ;	unspecified, using default values
   280                           ;	PLL Prescaler Selection bits
   281                           ;	PLLDIV = 0x0, unprogrammed default
   282                           ;	System Clock Postscaler Selection bits
   283                           ;	CPUDIV = 0x0, unprogrammed default
   284                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   285                           ;	USBDIV = 0x0, unprogrammed default
   286  300000                     	org	3145728
   287  300000  00                 	db	0
   288                           
   289                           ;Config register CONFIG1H @ 0x300001
   290                           ;	unspecified, using default values
   291                           ;	Oscillator Selection bits
   292                           ;	FOSC = 0x5, unprogrammed default
   293                           ;	Fail-Safe Clock Monitor Enable bit
   294                           ;	FCMEN = 0x0, unprogrammed default
   295                           ;	Internal/External Oscillator Switchover bit
   296                           ;	IESO = 0x0, unprogrammed default
   297  300001                     	org	3145729
   298  300001  05                 	db	5
   299                           
   300                           ;Config register CONFIG2L @ 0x300002
   301                           ;	unspecified, using default values
   302                           ;	Power-up Timer Enable bit
   303                           ;	PWRT = 0x1, unprogrammed default
   304                           ;	Brown-out Reset Enable bits
   305                           ;	BOR = 0x3, unprogrammed default
   306                           ;	Brown-out Reset Voltage bits
   307                           ;	BORV = 0x3, unprogrammed default
   308                           ;	USB Voltage Regulator Enable bit
   309                           ;	VREGEN = 0x0, unprogrammed default
   310  300002                     	org	3145730
   311  300002  1F                 	db	31
   312                           
   313                           ;Config register CONFIG2H @ 0x300003
   314                           ;	unspecified, using default values
   315                           ;	Watchdog Timer Enable bit
   316                           ;	WDT = 0x1, unprogrammed default
   317                           ;	Watchdog Timer Postscale Select bits
   318                           ;	WDTPS = 0xF, unprogrammed default
   319  300003                     	org	3145731
   320  300003  1F                 	db	31
   321                           
   322                           ; Padding undefined space
   323  300004                     	org	3145732
   324  300004  FF                 	db	255
   325                           
   326                           ;Config register CONFIG3H @ 0x300005
   327                           ;	unspecified, using default values
   328                           ;	CCP2 MUX bit
   329                           ;	CCP2MX = 0x1, unprogrammed default
   330                           ;	PORTB A/D Enable bit
   331                           ;	PBADEN = 0x1, unprogrammed default
   332                           ;	Low-Power Timer 1 Oscillator Enable bit
   333                           ;	LPT1OSC = 0x0, unprogrammed default
   334                           ;	MCLR Pin Enable bit
   335                           ;	MCLRE = 0x1, unprogrammed default
   336  300005                     	org	3145733
   337  300005  83                 	db	131
   338                           
   339                           ;Config register CONFIG4L @ 0x300006
   340                           ;	unspecified, using default values
   341                           ;	Stack Full/Underflow Reset Enable bit
   342                           ;	STVREN = 0x1, unprogrammed default
   343                           ;	Single-Supply ICSP Enable bit
   344                           ;	LVP = 0x1, unprogrammed default
   345                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   346                           ;	ICPRT = 0x0, unprogrammed default
   347                           ;	Extended Instruction Set Enable bit
   348                           ;	XINST = 0x0, unprogrammed default
   349                           ;	Background Debugger Enable bit
   350                           ;	DEBUG = 0x1, unprogrammed default
   351  300006                     	org	3145734
   352  300006  85                 	db	133
   353                           
   354                           ; Padding undefined space
   355  300007                     	org	3145735
   356  300007  FF                 	db	255
   357                           
   358                           ;Config register CONFIG5L @ 0x300008
   359                           ;	unspecified, using default values
   360                           ;	Code Protection bit
   361                           ;	CP0 = 0x1, unprogrammed default
   362                           ;	Code Protection bit
   363                           ;	CP1 = 0x1, unprogrammed default
   364                           ;	Code Protection bit
   365                           ;	CP2 = 0x1, unprogrammed default
   366                           ;	Code Protection bit
   367                           ;	CP3 = 0x1, unprogrammed default
   368  300008                     	org	3145736
   369  300008  0F                 	db	15
   370                           
   371                           ;Config register CONFIG5H @ 0x300009
   372                           ;	unspecified, using default values
   373                           ;	Boot Block Code Protection bit
   374                           ;	CPB = 0x1, unprogrammed default
   375                           ;	Data EEPROM Code Protection bit
   376                           ;	CPD = 0x1, unprogrammed default
   377  300009                     	org	3145737
   378  300009  C0                 	db	192
   379                           
   380                           ;Config register CONFIG6L @ 0x30000A
   381                           ;	unspecified, using default values
   382                           ;	Write Protection bit
   383                           ;	WRT0 = 0x1, unprogrammed default
   384                           ;	Write Protection bit
   385                           ;	WRT1 = 0x1, unprogrammed default
   386                           ;	Write Protection bit
   387                           ;	WRT2 = 0x1, unprogrammed default
   388                           ;	Write Protection bit
   389                           ;	WRT3 = 0x1, unprogrammed default
   390  30000A                     	org	3145738
   391  30000A  0F                 	db	15
   392                           
   393                           ;Config register CONFIG6H @ 0x30000B
   394                           ;	unspecified, using default values
   395                           ;	Configuration Register Write Protection bit
   396                           ;	WRTC = 0x1, unprogrammed default
   397                           ;	Boot Block Write Protection bit
   398                           ;	WRTB = 0x1, unprogrammed default
   399                           ;	Data EEPROM Write Protection bit
   400                           ;	WRTD = 0x1, unprogrammed default
   401  30000B                     	org	3145739
   402  30000B  E0                 	db	224
   403                           
   404                           ;Config register CONFIG7L @ 0x30000C
   405                           ;	unspecified, using default values
   406                           ;	Table Read Protection bit
   407                           ;	EBTR0 = 0x1, unprogrammed default
   408                           ;	Table Read Protection bit
   409                           ;	EBTR1 = 0x1, unprogrammed default
   410                           ;	Table Read Protection bit
   411                           ;	EBTR2 = 0x1, unprogrammed default
   412                           ;	Table Read Protection bit
   413                           ;	EBTR3 = 0x1, unprogrammed default
   414  30000C                     	org	3145740
   415  30000C  0F                 	db	15
   416                           
   417                           ;Config register CONFIG7H @ 0x30000D
   418                           ;	unspecified, using default values
   419                           ;	Boot Block Table Read Protection bit
   420                           ;	EBTRB = 0x1, unprogrammed default
   421  30000D                     	org	3145741
   422  30000D  40                 	db	64
   423                           tosu	equ	0xFFF
   424                           tosh	equ	0xFFE
   425                           tosl	equ	0xFFD
   426                           stkptr	equ	0xFFC
   427                           pclatu	equ	0xFFB
   428                           pclath	equ	0xFFA
   429                           pcl	equ	0xFF9
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           prodh	equ	0xFF4
   435                           prodl	equ	0xFF3
   436                           indf0	equ	0xFEF
   437                           postinc0	equ	0xFEE
   438                           postdec0	equ	0xFED
   439                           preinc0	equ	0xFEC
   440                           plusw0	equ	0xFEB
   441                           fsr0h	equ	0xFEA
   442                           fsr0l	equ	0xFE9
   443                           wreg	equ	0xFE8
   444                           indf1	equ	0xFE7
   445                           postinc1	equ	0xFE6
   446                           postdec1	equ	0xFE5
   447                           preinc1	equ	0xFE4
   448                           plusw1	equ	0xFE3
   449                           fsr1h	equ	0xFE2
   450                           fsr1l	equ	0xFE1
   451                           bsr	equ	0xFE0
   452                           indf2	equ	0xFDF
   453                           postinc2	equ	0xFDE
   454                           postdec2	equ	0xFDD
   455                           preinc2	equ	0xFDC
   456                           plusw2	equ	0xFDB
   457                           fsr2h	equ	0xFDA
   458                           fsr2l	equ	0xFD9
   459                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_add

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5     291
                                              6 COMRAM    11     6      5
                                _add
 ---------------------------------------------------------------------------------
 (1) _add                                                  6     2      4     220
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _add

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     11      11       1       17.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu May 07 10:19:12 2020

                      l7 7FFC                       l10 7FC4                      l702 7FB0  
                    l710 7FC6                      l704 7FB0                      l712 7FD6  
                    l706 7FBC                      l714 7FF2                      _add 7FB0  
                   ?_add 0001                     add@a 0001                     add@b 0003  
                   add@c 0005                     _main 7FC6                     start 0000  
           ___param_bank 000000                    ??_add 0005                    ?_main 0007  
                  main@e 000E                    main@f 0010                    status 000FD8  
        __initialization 7FAA             __end_of_main 8000                   ??_main 000C  
          __activetblptr 000000               __accesstop 0060  __end_of__initialization 7FAA  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7FAA                  __ramtop 0800  
                __ptext0 7FC6                  __ptext1 7FB0             __size_of_add 0016  
   end_of_initialization 7FAA      start_initialization 7FAA              __end_of_add 7FC6  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 003A  
               main@argc 0007                 main@argv 0009  
